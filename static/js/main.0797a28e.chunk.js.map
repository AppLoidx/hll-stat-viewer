{"version":3,"sources":["components/StatsTable.js","components/KillTable.js","components/Tracker.js","consts/servers.js","components/LiveStatsTable.js","scripts/liveStatsLoader.js","App.js","reportWebVitals.js","index.js"],"names":["StatsTable","dataSource","columns","title","dataIndex","key","sorter","a","b","kills","deaths","kills_per_minute","kills_streak","pagination","pageSize","KillTable","header","data","itemLayout","style","width","renderItem","item","Item","justifyContent","display","PlayerStats","playerStats","direction","margin","Object","entries","most_killed","death_by","Tracker","player","serverStats","useState","undefined","setPlayerStats","useEffect","filteredArray","filter","p","length","servers","id","serverName","api","LiveStatsTable","liveStatsLoader","fetch","s","then","resp","json","App","trackerName","setTrackerName","serverId","setServerId","setServerStats","menuState","setMenuState","updateInterval","setUpdateInterval","clearInterval","newUpdateInterval","setInterval","d","result","stats","searchOptions","setSearchOptions","searchVal","setSearchVal","startsWith","map","value","mode","selectedKeys","onSelect","e","disabled","marginLeft","defaultValue","server","marginTop","span","offset","options","placeholder","onSearch","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0797a28e.chunk.js","sourcesContent":["import {Table} from \"antd\";\r\n\r\nconst StatsTable = ({dataSource}) => {\r\n    const columns = [\r\n        {\r\n            title: 'Игрок',\r\n            dataIndex: 'player',\r\n            key: 'player',\r\n        },\r\n        {\r\n            title: 'Убийства',\r\n            dataIndex: 'kills',\r\n            key: 'kills',\r\n            sorter: (a, b) => b.kills - a.kills\r\n        },\r\n        {\r\n            title: 'Смертей',\r\n            dataIndex: 'deaths',\r\n            key: 'deaths',\r\n            sorter: (a, b) => b.deaths - a.deaths\r\n        },\r\n        {\r\n            title: 'Убийств в минуту',\r\n            dataIndex: 'kills_per_minute',\r\n            key: 'kills_per_minute',\r\n            sorter: (a, b) => b.kills_per_minute - a.kills_per_minute\r\n        },\r\n        {\r\n            title: 'Кил-стрик (наиболь.)',\r\n            dataIndex: 'kills_streak',\r\n            key: 'kills_streak',\r\n            sorter: (a, b) => b.kills_streak - a.kills_streak\r\n        },\r\n    ];\r\n\r\n    return <Table dataSource={dataSource} columns={columns} pagination={{ pageSize: 102}}/>;\r\n}\r\n\r\nexport default StatsTable;","import {List} from \"antd\";\r\n\r\nconst KillTable = ({header, data}) => {\r\n    return <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={data}\r\n        style={{width: \"800px\"}}\r\n        header={header}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <div style={{justifyContent: \"space-between\", display: \"flex\", width: \"80%\"}}>\r\n                    <div>{item[0]}</div>\r\n                    <div>{item[1]}</div>\r\n                </div>\r\n            </List.Item>\r\n        )}\r\n    />\r\n}\r\n\r\nexport default KillTable;","import {useEffect, useState} from \"react\";\r\nimport {Space} from \"antd\";\r\nimport StatsTable from \"./StatsTable\";\r\nimport KillTable from \"./KillTable\";\r\n\r\nconst Tracker = ({player, serverStats}) => {\r\n    const [playerStats, setPlayerStats] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n            let filteredArray = serverStats.filter(p => p.player === player);\r\n            setPlayerStats(filteredArray.length > 0 ? filteredArray[0] : undefined);\r\n    }, [player, serverStats]);\r\n\r\n    return playerStats !== undefined ? <div style={{width: \"100%\"}}><PlayerStats playerStats={playerStats}/></div>: <>Ничего не найдено. Попробуйте поменять сервер</>;\r\n}\r\n\r\nconst PlayerStats = ({playerStats}) => {\r\n    return <Space direction=\"vertical\"  style={{width: \"100%\"}}>\r\n        <StatsTable dataSource={[playerStats]} />\r\n        <div style={{display: 'flex', justifyContent: \"space-between\", margin: \"10px\"}}>\r\n            <KillTable header={\"Убил\"} data={Object.entries(playerStats.most_killed)}/>\r\n            <KillTable header={\"Убит от\"} data={Object.entries(playerStats.death_by)}/>\r\n        </div>\r\n    </Space>\r\n\r\n}\r\n\r\nexport default Tracker;","export const servers = [\r\n    {\r\n        id: 0,\r\n        serverName: \"PKKA 1\",\r\n        api: \"http://pkka1.pkkawebpanel2.ru:7010/api/get_live_game_stats\"\r\n    },\r\n    {\r\n        id: 1,\r\n        serverName: \"PKKA 2\",\r\n        api: \"http://pkka2.pkkawebpanel2.ru:7012/api/get_live_game_stats\"\r\n    },\r\n    {\r\n        id: 2,\r\n        serverName: \"PKKA 3\",\r\n        api: \"http://pkka4.pkkawebpanel2.ru:7016/api/get_live_game_stats\"\r\n    },\r\n]","import StatsTable from \"./StatsTable\";\r\n\r\nconst LiveStatsTable = ({serverStats}) => {\r\n\r\n\r\n    return <StatsTable dataSource={serverStats} />;\r\n}\r\n\r\nexport default LiveStatsTable;","import {servers} from \"../consts/servers\";\r\n\r\nconst liveStatsLoader = (id) => {\r\n    return fetch(servers.filter(s => s.id === id)[0].api)\r\n        .then(resp => resp.json())\r\n}\r\n\r\nexport default liveStatsLoader;","import './App.css';\nimport Tracker from \"./components/Tracker\";\nimport Search from \"antd/es/input/Search\";\nimport {useEffect, useState} from \"react\";\nimport {AutoComplete, Col, Menu, Row, Select, Space} from \"antd\";\nimport {Option} from \"antd/es/mentions\";\nimport {servers} from \"./consts/servers\";\nimport LiveStatsTable from \"./components/LiveStatsTable\";\nimport liveStatsLoader from \"./scripts/liveStatsLoader\";\n\nfunction App() {\n    const [trackerName, setTrackerName] = useState(\"\");\n    const [serverId, setServerId] = useState(0);\n    const [serverStats, setServerStats] = useState([]);\n\n    const [menuState, setMenuState] = useState(\"tracker\");\n\n    const [updateInterval, setUpdateInterval] = useState(null);\n\n\n\n    useEffect(() => {\n        if (updateInterval !== null) {\n            clearInterval(updateInterval);\n        }\n        let newUpdateInterval = setInterval(() => {\n            liveStatsLoader(serverId)\n                .then(d => {\n                    setServerStats(d.result.stats);\n                });\n        }, 5000);\n\n        setUpdateInterval(newUpdateInterval);\n\n        liveStatsLoader(serverId)\n            .then(d => {\n                setServerStats(d.result.stats);\n            });\n\n    }, [serverId]);\n\n\n    const [searchOptions, setSearchOptions] = useState([]);\n    const [searchVal, setSearchVal] = useState(\"\");\n\n    useEffect(() => {\n        setSearchOptions(serverStats.filter(p => p.player.startsWith(searchVal)).map(p => {return {value: p.player}}));\n    }, [searchVal, serverStats])\n\n    const onSearch = (value) => {\n        setTrackerName(value);\n        setSearchVal(\"\");\n    }\n\n    return (\n        <div>\n            <Menu mode=\"horizontal\" selectedKeys={[menuState]} onSelect={e => setMenuState(e.key)}>\n                <Menu.Item key=\"tracker\">\n                    Трекер\n                </Menu.Item>\n                <Menu.Item key=\"stats\">\n                    Общая статистика\n                </Menu.Item>\n\n                <Menu.Item key=\"serverChoose\" disabled style={{marginLeft: \"auto\"}}>\n                    <Select style={{width: \"200px\"}} onSelect={setServerId} defaultValue={serverId}>\n                        {servers.map(server => <Option value={server.id}>{server.serverName}</Option>)}\n                    </Select>\n                </Menu.Item>\n            </Menu>\n\n            <Row style={{marginTop: \"40px\"}}>\n                <Col span={20} offset={2}>\n                    {\n                        menuState === \"tracker\" && <Space direction=\"vertical\" style={{width: \"100%\"}}>\n                            <AutoComplete options={searchOptions} placeholder=\"Nickname\" onSearch={setSearchVal} onChange={onSearch} style={{width: 400}}/>\n                            <Tracker player={trackerName} serverStats={serverStats}/>\n                        </Space>\n                    }\n                    {\n                        menuState === \"stats\" && <LiveStatsTable serverStats={serverStats}/>\n                    }\n\n\n                </Col>\n            </Row>\n        </div>\n\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}